from pprint import pprint
from sympy import Matrix, S, linsolve, symbols
import numpy as np

pi1, pi2, pi3, pi4, pi5, pi6, pi7, pi8, pi9 = symbols("pi1, pi2, pi3, pi4, pi5, pi6, pi7, pi8, pi9")

p0 = 0.5
p1 = 0.3
p2 = 0.1


# M = [
#     [(1 - p0**2), 0, 0, 0, p0**2, 0, 0, 0, 0],
#     [p1 * (1 - p0), (1 - p1), 0, 0, 0, p1 * p0, 0, 0, 0],
#     [p2 * (1 - p0), 0, (1 - p2), 0, 0, p2 * p0, 0, 0, 0],
#     [p1 * (1 - p0), 0, 0, (1 - p1), 0, 0, 0, p1 * p0, 0],
#     [0, (p1 - p1**2), 0, (p1 - p1**2), (1 - p1)**2, 0, 0, 0, p1**2],
#     [0, 0, p1 * (1 - p2), p2 * (1 - p1), 0, (1 - p1 - p2 + p1 * p2), 0, 0, p2 * p1],
#     [p2 * (1 - p0), 0, 0, 0, 0, 0, (1 - p2), p2 * p0, 0],
#     [0, p2 * (1 - p1), 0, 0, 0, 0, p1 * (1 - p2), (1 - p1 - p2 + p1 * p2), p2 * p1],
#     [0, 0, (p2 - p2**2), 0, 0, 0, (p2 - p2**2), 0, (2 * (p2**2) - 2 * p2 + 1)],
#     [1, 1, 1, 1, 1, 1, 1, 1, 1]
# ]
M = [
    [(1 - p0**2 - 1), 0, 0, 0, p0**2, 0, 0, 0, 0],
    [p1 * (1 - p0), (1 - p1 - 1), 0, 0, 0, p1 * p0, 0, 0, 0],
    [p2 * (1 - p0), 0, (1 - p2 - 1), 0, 0, p2 * p0, 0, 0, 0],
    [p1 * (1 - p0), 0, 0, (1 - p1 - 1), 0, 0, 0, p1 * p0, 0],
    [0, (p1 - p1**2), 0, (p1 - p1**2), (1 - p1)**2 - 1, 0, 0, 0, p1**2],
    [0, 0, p1 * (1 - p2), p2 * (1 - p1), 0, (1 - p1 - p2 + p1 * p2 - 1), 0, 0, p2 * p1],
    [p2 * (1 - p0), 0, 0, 0, 0, 0, (1 - p2 - 1), p2 * p0, 0],
    [0, p2 * (1 - p1), 0, 0, 0, 0, p1 * (1 - p2), (1 - p1 - p2 + p1 * p2 - 1), p2 * p1],
    [0, 0, (p2 - p2**2), 0, 0, 0, (p2 - p2**2), 0, (2 * (p2**2) - 2 * p2 + 1 - 1)],
    [1, 1, 1, 1, 1, 1, 1, 1, 1]
]

npM = np.matrix(M)

ml = []
for l in M:
    ml.append(list(map((lambda x: round(x, 4)), l)))
M = ml

npB = np.matrix([0, 0, 0, 0, 0, 0, 0, 0, 0, 1])

pprint(npM.I * npB.transpose())

# print(M)

A = Matrix(M)
b = Matrix([0, 0, 0, 0, 0, 0, 0, 0, 0, 1])

r = linsolve((A, b), [pi1, pi2, pi3, pi4, pi5, pi6, pi7, pi8, pi9])


# x, y, z = symbols("x, y, z")
# A = Matrix([[1, 2, 3], [4, 5, 6], [7, 8, 10]])
# b = Matrix([x, y, z])
# r = linsolve((A, b), [x, y, z])
# print(b)

print(r)



# M = [
#     [(1 - p0**2 - 1), 0, 0, 0, p0**2, 0, 0, 0, 0],
#     [p1 * (1 - p0), (1 - p1 - 1), 0, 0, 0, p1 * p0, 0, 0, 0],
#     [p2 * (1 - p0), 0, (1 - p2 - 1), 0, 0, p2 * p0, 0, 0, 0],
#     [p1 * (1 - p0), 0, 0, (1 - p1 - 1), 0, 0, 0, p1 * p0, 0],
#     [0, (p1 - p1**2), 0, (p1 - p1**2), (1 - p1)**2 - 1, 0, 0, 0, p1**2],
#     [0, 0, p1 * (1 - p2), p2 * (1 - p1), 0, (1 - p1 - p2 + p1 * p2 - 1), 0, 0, p2 * p1],
#     [p2 * (1 - p0), 0, 0, 0, 0, 0, (1 - p2 - 1), p2 * p0, 0],
#     [0, p2 * (1 - p1), 0, 0, 0, 0, p1 * (1 - p2), (1 - p1 - p2 + p1 * p2 - 1), p2 * p1],
#     [0, 0, (p2 - p2**2), 0, 0, 0, (p2 - p2**2), 0, (2 * (p2**2) - 2 * p2 + 1 - 1)],
#     [1, 1, 1, 1, 1, 1, 1, 1, 1]
# ]
#
# # pprint(M)
#
# A = Matrix(M)
# b = Matrix([0, 0, 0, 0, 0, 0, 0, 0, 0, 1])
#
# A = Matrix([[1, 2, 3], [4, 5, 6], [7, 8, 10]])
# b = Matrix([3, 6, 9])
#
# x, y, z = symbols("x, y, z")
# r = linsolve((A, b), [x, y, z])
#
# # r = linsolve((A, b), [pi1, pi2, pi3, pi4, pi5, pi6, pi7, pi8, pi9])
#
# print(A)
# print(b)
#
# print(r)
